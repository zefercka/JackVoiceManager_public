from sklearn import feature_extraction, svm
import joblib

features = []
labels = []

commands = {
    "intents": {
        "google_search": {
            "examples": ["найди гугл", 'поиск гугл', "найди в гугл", "поиск в гугле", "поиск google", "поиск в google",
            "найди", "поиск", "найди в яндексе", "найди в интернете", "найди в сети", "найди в мэйле"],
        },
        "weather": {
            "examples": ["погода", "градус", "сколько градусов", "какой погода", "будет ли дождь", "дождь", "снег",
            "погода в", "сколько градусов в", "будет ли дождь в", "как одеваться на улицу", "холодно ли",
            "тепло", "холод", "какая будет погода", "будет ли снег", "ветер"],
        },
        "time": {
            "examples": ['время город', 'сколько время', 'время', "время в", "сколько время в", "сколько времени в",
            "который час", "который час в", "минута", "секунда", "час", "времени", "времени в"],
        },
        "notification": {
            "examples": ['напомнить', 'напоминание', 'напомни', 'напомнить сходить', 'напомни сходить',
            'напоминание сходить', 'напоминание сделать', 'напомни сделать'],
        },
        "play_favourite": {
            "examples": ["плейлист понравившееся", 'плейлист любимый', 'любимый',
            'понравившееся', 'включить мне нравится', "включи любимое", "включи понравившееся",
            "включи избранное", "любимое", "избранное", "плейлист любимое", "плейлист избранное",
            "включи плейлист понравившееся"],
        },
        "pause": {
            "examples": ['остановить музыку', 'пауза', 'пауза музыка', 'стоп музыка', 'стоп', 'выключить музыка',
            "останови музыку", "поставь музыку на паузу", "выключить музыку", "выключи музыку",
            "поставь на паузу"],
        },
        "play": {
            "examples": ['включить музыку', 'плэй', 'плэй музыка', 'старт музыка', 'старт', 'запустить музыка', 'play',
            'play музыка', 'плей музыка', "включи музыку", "запусти музыку", "стартани музыку", "плей"],
        },
        "repeat": {
            "examples": ['повтор', 'повтор плейлист', 'включи повтор плейлист', "включить повтор", "повтори трек",
            "повтори плейлист", "повтори", "включи повтор плейлиста", "включи повтор песни"],
        },
        "next_track": {
            "examples": ['следующий трек', 'следующий', 'переключить трек', 'переключить песню', 'следующий песня',
            "новая песня", "новый трек", "новый саунд", "следующий саунд", "включи следующий трек",
            "включи следующую песню"],
        },
        "previous_track": {
            "examples": ['предыдущий трек', 'предыдущий', 'переключить трек назад', 'переключить песню назад',
            'предыдущая песня', "включи предыдущую песню", "включи прошлый трек",
            "включить предыдущий трек", "включи предыдущий трек", "включи прошлую песню"],
        },
        "shuffle": {
            "examples": ['перемешать', 'перемешать плейлист', 'перемешать песни', 'перемешивание', 'перемешивание песня',
            "включи перемешивание", "включи перемешивание плейлиста", "пермешай плейлист",
            "пермешивание песен", "выключи перемешивание песен", "выключи рандом", "включи рандом треков",
            "выключи рандом треков", "включи рандом песен", "включи перемешивание треков", 'случайный трек'],
        },
        "like": {
            "examples": ['добавить нравиться', 'нравиться', 'добавить', 'добавить избрать', 'добавить любимое',
            "добавить в избранное", "мне нравиться", "добавить в любимое", "добавить в понравившееся",
            "добавить в избранное", "лайк"],
        },
        "dislike": {
            "examples": ['удалить нравиться', 'не нравиться', 'удалить', 'удалить избрать', 'удалить любимое',
            "удалить из понравившегося", "удалить из любимого", "удалить из нравиться", "не нравиться",
            "удаить из избранного", "удалить из избраного", "дизлайк"],
        },
        "screenshot": {
            "examples": ['сделать скриншот', 'сделай скриншот', 'скриншот', 'скрин', 'сделай снимок экрана',
                         'снимок экрана', 'сделай скрин', 'сделать скрин', 'сделать снимок экрана', 'сохранить скрин',
                         'сохранить снимок экрана', 'сохранить экран', 'скрин области', 'сохранить скриншот', "screen",
                         'сделай screen', 'сделай screen экрана', 'сделать screen', 'screenshot'],
        },
        "route": {
            "examples": ['построй маршрут', 'как доехать от до', 'как доехать', 'сколько ехать до',
                         'сколько ехать от до', 'как ехать до', 'как доехать до', 'построить маршрут', 'маршрут',
                         'строй маршрут', 'строить маршрут', 'создать маршрут', 'дорога', 'проложи маршрут',
                         'создание маршрута', 'создание маршрут', 'стройка маршрут', 'сделай маршрут',
                         'проложить маршрут', ]
        },
        "exchange": {
            "examples": ["курс доллара к рублю", "курс валюты", "курс доллара", "курс рубля", "курс евро",
                         "какой курс доллара", "сколько стоит доллар", "сколько стоит евро", "евро к рублю",
                         "доллар к рублю", "курс юаний", "курс юани", "курс йен", "йена к рублю", "сколько стоит йена",
                         "вьетнамский донг", "донг", "курс гривны", "курс к рублю", "курс"]
        },
    },
}

for command, items in commands['intents'].items():
    for i in items['examples']:
        features.append(i)
        labels.append(command)

v = feature_extraction.text.TfidfVectorizer(analyzer="char", ngram_range=(2, 3))
c = svm.LinearSVC()

training_vector = v.fit_transform(features)
c.fit(training_vector, labels)
joblib.dump(c, 'model1.pkl')
joblib.dump(v, 'vectorizer.pkl')